type Event
  @model
  @auth(
    rules: [
      { allow: owner }
      { allow: owner, ownerField: "organizers", operations: [read,update] }
    ]
  ) {
  id: ID
  owner: ID
  organizers: [ID]
  displayName: String
  cfpStartTime: AWSDateTime
  cfpEndTime: AWSDateTime
  startTime: AWSDateTime
  endTime: AWSDateTime
  sessions: [Session]
  submissions: [Submission]
  locations: [Location]
  timeSlots: [TimeSlot]
  evaluations: [Evaluation]
}

type Evaluation {
  id: ID
  ipAddress: AWSIPAddress
  session: ID
  responses: AWSJSON
}

enum SubmissionStatus {
  Submitted
  Declined
  Withdrawn
  Shortlisted
  Accepted
}

type Submission {
  id: ID
  owner: ID
  status: SubmissionStatus
  submitTime: AWSDateTime
  speakers: [ID]
  labels: [String]
  title: String
  description: String
  comments: String
}

type Speaker {
  id: ID
  owner: ID
  key: String
  name: String
  tagline: String
  biography: String
  avatar: AWSURL
  socialLinks: [SocialLink]
  location: String
  topics: [String]
}

type Session {
  id: ID
  location: ID
  timeSlot: ID
  owner: ID
  speakers: [ID]
  labels: [String]
  title: String
  description: String
  comments: String
}

type Location {
  id: ID
  name: String
  ordinal: Int
}

type TimeSlot {
  id: ID
  startTime: AWSDateTime
  minutes: Int
}
